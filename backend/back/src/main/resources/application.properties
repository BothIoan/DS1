database.ip = ${DB_IP:ec2-54-76-215-139.eu-west-1.compute.amazonaws.com}
database.port = ${DB_PORT:5432}
database.user = ${DB_USER:wugjkqaveufnjs}
database.password = ${DB_PASSWORD:c838e2e6bce1ebf090f1d1f1dfe2afe81565d4c56af61b85c5519989bf01138c}
database.name = ${DB_DBNAME:dbj40djni7kqt0}

spring.datasource.platform=postgres
spring.datasource.url = jdbc:postgresql://${database.ip}:${database.port}/${database.name}
spring.datasource.username = ${database.user}
spring.datasource.password = ${database.password}

#spring.datasource.url=jdbc:postgresql://localhost:5432/facultate
#database.ip=${DB_IP:localhost}
#database.port=${DB_PORT:5432}
#database.user=${DB_USER:test}
#database.password=${DB_PASSWORD:test}
#database.name=${DB_DBNAME:facultate}
#spring.datasource.username= test
#spring.datasource.password= test
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL10Dialect
spring.jackson.serialization.fail-on-empty-beans=false
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


